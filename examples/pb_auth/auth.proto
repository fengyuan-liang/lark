syntax = "proto3";
package pb_auth;
option go_package = "./pb_auth;pb_auth";

enum PLATFORM_TYPE {
  UNKNOWN_PLATFORM_TYPE = 0;
  IOS = 1;
  ANDROID = 2;
  MAC = 3;
  WINDOWS = 4;
  WEB = 5;
}

message SignUpReq {
  PLATFORM_TYPE reg_platform = 1; // 注册平台
  string nickName = 2; // 昵称
  string password = 3; // 密码
  string firstName = 4;
  string lastName = 5;
  int32 gender = 6;
  int64 birth_ts = 7; // 生日
  string email = 8;
  string mobile = 9;
  string avatar = 10; //头像url
  int64 city_id = 11; // 城市ID
  int64 code = 12; // 验证码
  string uuid = 13;
  int64 server_id = 14; // 服务器编号
}

message SignUpResp {
  int32 code = 1;
  string msg = 2;
  UserInfo user_info = 3;
  Token access_token = 4;
  Token refresh_token = 5;
}

message UserInfo {
  string nickName = 1;
  string firstName = 2;
  string lastName = 3;
  int32 gender = 4;
  int64 birth_ts = 5;
  string email = 6;
  string mobile = 7;
}

message Token {
  // @inject_tag:json:"token"
  string token = 1;
  // @inject_tag:json:"expire"
  int64 expire = 2;
}

service Auth {
  rpc SignUp(SignUpReq) returns(SignUpResp);
}